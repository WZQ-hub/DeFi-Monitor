"""
Django settings for Defi_Monitor project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-oo$rj1fo5+ae9&#-b_#$+1a=x485s&t++o=(^$iu)5t6(23@f)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'ETHMonitor.apps.EthmonitorConfig',
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Defi_Monitor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Defi_Monitor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "super",
        'USER': "super_wzq",
        'PASSWORD': "wan20020423",
        'HOST': "localhost",
        'PORT': "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LOGGING = {
    "version": 1,  # 配置的版本，目前固定为1
    "disable_existing_loggers": False,  # 是否禁用已存在的日志记录器。通常设为 False。

    # 定义日志格式
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },

    # 定义处理器（Handler），决定日志要输出到哪里
    "handlers": {
        # 输出到控制台
        "console": {
            "level": "DEBUG",  # 处理的最低日志级别
            "class": "logging.StreamHandler",
            "formatter": "simple",  # 使用上面定义的 'simple' 格式
        },
        # 输出到文件
        "file": {
            "level": "INFO",
            "class": "logging.handlers.RotatingFileHandler",  # 文件达到一定大小时会自动分割
            "filename": "logs/django.log",  # 日志文件路径 (请确保 logs 目录存在)
            "maxBytes": 1024 * 1024 * 5,  # 5 MB
            "backupCount": 2,  # 保留2个备份文件
            "formatter": "verbose",  # 使用上面定义的 'verbose' 格式
        },
    },

    # 定义日志记录器（Logger），它们是日志的入口
    "loggers": {
        # Django 自身的日志
        "django": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": True,
        },
        # 你自己应用的日志 (假设你有一个叫 'myapp' 的应用)
        "myapp": {
            "handlers": ["console", "file"],
            "level": "DEBUG",
            "propagate": False,  # 不再向上传递给根记录器
        },
        # 根记录器，捕获所有未被明确指定的日志
        "root": {
            "handlers": ["console"],
            "level": "WARNING",
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
